<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.30 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-boucadair-mptcp-plain-mode-07" category="exp">

  <front>
    <title abbrev="MPTPC plain mode">An MPTCP Option for Network-Assisted MPTCP Deployments - Plain Transport Mode</title>

    <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair">
      <organization>France Telecom</organization>
      <address>
        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>
    <author initials="C." surname="Jacquenet" fullname="Christian Jacquenet">
      <organization>France Telecom</organization>
      <address>
        <email>christian.jacquenet@orange.com</email>
      </address>
    </author>
    <author initials="D." surname="Behagel" fullname="Denis Behaghel">
      <organization>OneAccess</organization>
      <address>
        <email>Denis.Behaghel@oneaccess-net.com</email>
      </address>
    </author>
    <author initials="S." surname="Secci" fullname="Stefano Secci">
      <organization>Universite Pierre et Marie Curie (UPMC)</organization>
      <address>
        <email>stefano.secci@lip6.fr</email>
      </address>
    </author>
    <author initials="W." surname="Henderickx" fullname="Wim Henderickx">
      <organization>Alcatel-Lucent</organization>
      <address>
        <email>wim.henderickx@alcatel-lucent.com</email>
      </address>
    </author>
    <author initials="R." surname="Skog" fullname="Robert Skog">
      <organization>Ericsson</organization>
      <address>
        <email>robert.skog@ericsson.com</email>
      </address>
    </author>

    <date year="2016" month="March" day="10"/>

    <area>Transport</area>
    <workgroup>MPTCP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>One of the promising deployment scenarios for Multipath TCP (MPTCP)
is to enable a Customer Premises Equipment (CPE) that is connected to
multiple networks (e.g., DSL, LTE, WLAN) to optimize the usage of its
network attachments.  Because of the lack of MPTCP support at the
server side, some service providers now consider a network-assisted
model that relies upon the activation of a dedicated function called
MPTCP Concentrator. This document focuses on a deployment scheme
where the identity of the MPTCP Concentrator(s) is explicitly
configured on connected hosts.</t>

<t>This document specifies an MPTCP option that is used to avoid an
encapsulation scheme between the CPE and the MPTCP Concentrator.
Also, this document specifies how non-TCP traffic can be distributed
among available paths without requiring a specific encapsulation scheme.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>One of the promising deployment scenarios for Multipath TCP (MPTCP,
<xref target="RFC6824"/>) is to enable a Customer Premises Equipment (CPE) that is
connected to multiple networks (e.g., DSL, LTE, WLAN) to optimize the
usage of such resources, see for example <xref target="I-D.deng-mptcp-proxy"/> or
<xref target="RFC4908"/>.  This deployment scenario relies on MPTCP proxies located
on both the CPE and network sides (<xref target="fig-design"/>).  The latter plays the
role of traffic concentrator.  A concentrator terminates the MPTCP
sessions established from a CPE, before redirecting traffic into a
legacy TCP session.</t>

<figure title="'Network-Assisted' MPTCP Design" anchor="fig-design"><artwork type="~"><![CDATA[
                      IP Network #1
 +------------+        _--------_    +------------+
 |            |       (e.g., LTE )   |            |
 |   CPE      +=======+          +===+            |
 | (MPTCP     |       (_        _)   |Concentrator|
 |  Proxy)    |         (_______)    | (MPTCP     |
 |            |                      |  Proxy)    |------> Internet
 |            |                      |            |
 |            |        IP Network #2 |            |
 |            |        _--------_    |            |
 |            |       ( e.g., DSL )  |            |
 |            +=======+           +==+            |
 |            |       (_        _)   |            |
 +-----+------+        (_______)     +------------+
       |
----CPE network----
       |
    end-nodes
]]></artwork></figure>

<t>Both implicit and explicit models are considered to steer traffic
towards an MPTCP Concentrator.  This document focuses on the explicit
model that consists in configuring explicitly the reachability
information of the MPTCP concentrator on a host (e.g.,
<xref target="I-D.boucadair-mptcp-dhc"/>).</t>

<t>This specification assumes an MPTCP Concentrator is reachable through
one or multiple IP addresses.  Also, it assumes the various network
attachments provided to an MPTCP-enabled CPE are managed by the same
administrative entity.  Additional assumptions are listed in
<xref target="sec:assumptions"/>.</t>

<t>This document explains how a plain transport mode, where packets are
exchanged between the CPE and the concentrator without requiring the
activation of any encapsulation scheme (e.g., IP-in-IP <xref target="RFC2473"/>, GRE
<xref target="RFC1701"/>, SOCKS <xref target="RFC1928"/>, etc.), can be enabled.</t>

<t>Also, this document investigates an alternate track where UDP flows
can be distributed among available paths without requiring any
encapsulation scheme.</t>

<t>The solution in this document does not require the modification of
the binding information base (BIB) structure maintained by both the
CPE and the Concentrator.  Likewise, this approach does not infer any
modification of the Network Address Translator (NAT) functions that
may reside in both the CPE and the device that embeds the
concentrator.</t>

<t>The solution also works properly when NATs are present in the network
between the CPE and the Concentrator, unlike solutions that rely upon
GRE tunneling.  Likewise, the solution accommodates deployments that
involve CGN (Carrier Grade NAT) upstream the Concentrator.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>This document makes use of the following terms:</t>

<t>o  Customer-facing interface: is an interface of the MPTCP
   Concentrator that is visible to a CPE and which is used for
   communication purposes between a CPE and the MPTCP Concentrator.</t>

<t>o  MPTCP Proxy: is a software module that is responsible for
   transforming a TCP connection into an MPTCP connection, and vice
   versa.  Typically, an MPTCP proxy can be embedded in a CPE and/or
   a Concentrator.</t>

<t>o  MPTCP leg: Refers to a network segment on which MPTCP is used to
   establish TCP connections.</t>

<t>o  MPTCP Concentrator (or concentrator): refers to a functional
   element that is responsible for aggregating the traffic of a group
   of CPEs.  This element is located upstream in the network.  One or
   multiple concentrators can be deployed in the network side to
   assist MPTCP-enabled CPEs to establish MPTCP connections via
   available network attachments.</t>

<t>On the uplink path, the concentrator terminates the MPTCP
   connections received from its customer-facing interfaces and
   transforms these connections into legacy TCP connections towards
   upstream servers.</t>

<t>On the downlink path, the concentrator turns the legacy server’s
   TCP connection into MPTCP connections towards its customer-facing
   interfaces.</t>

</section>
<section anchor="sec:assumptions" title="Assumptions">

<t>The following assumptions are made:</t>

<t>o  The logic for mounting network attachments by a host is
   deployment- and implementation-specific and is out of scope of
   this document.
o  The Network Provider that manages the various network attachments
   (including the concentrators) can enforce authentication and
   authorization policies using appropriate mechanisms that are out
   of scope of this document.
o  Policies can be enforced by a concentrator instance operated by
   the Network Provider to manage both upstream and downstream
   traffic.  These policies may be subscriber-specific, connection-
   specific or system-wide.
o  The concentrator may be notified about the results of monitoring
   (including probing) the various network legs to service a
   customer, a group of customers, a given region, etc.  No
   assumption is made by this document about how these monitoring
   (including probing) operations are executed.
o  An MPTCP-enabled, multi-interfaced host that is directly connected
   to one or multiple access networks is allocated addresses/prefixes
   via legacy mechanisms (e.g., DHCP) supported by the various
   available network attachments.  The host may be assigned the same
   or distinct IP address/prefix via the various available network
   attachments.
o  The location of the concentrator(s) is deployment-specific.
   Network Providers may choose to adopt centralized or distributed
   (even if they may not be present on the different network
   accesses) designs, etc.  Nevertheless, in order to take advantage
   of MPTCP, the location of the concentrator should not jeopardize
   packet forwarding performance for traffic sent from or directed to
   connected hosts.</t>

</section>
<section anchor="sec:plain-mode" title="Introducing the MPTCP Plain Transport Mode">

<section anchor="sec:plain-mode-alternative" title="An Alternative to Encapsulation">

<t>The design option for aggregating various network accesses often
relies upon the use of an encapsulation scheme (such as GRE) between
the CPE and the Concentrator.  The use of encapsulation is motivated
by the need to steer traffic through the concentrator and also to
allow the distribution of UDP flows among the available paths without
requiring any advanced traffic engineering tweaking technique in the
network side to intercept traffic and redirect it towards the
appropriate concentrator.</t>

<t>This document specifies another approach that relies upon plain
transport mode between the CPE and the Concentrator.</t>

<t>The use of a plain transport mode does not require the upgrade of any
intermediate function (security, TCP optimizer, etc.) that may be
located on-path.  Thus, the introduction of MPTCP concentrators in
operational networks to operate plain mode does not add any extra
complexity as far as the operation of possible intermediate functions
is concerned.</t>

</section>
<section anchor="sec:plain-mode-option" title="Plain Mode MPTCP Option">

<t>The format of the Plain Mode MPTCP option is shown in <xref target="fig-plain-mode-option"/>.</t>

<figure title="Plain Mode MPTCP Option" anchor="fig-plain-mode-option"><artwork><![CDATA[
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +---------------+---------------+-------+-------+---------------+
  |     Kind      |     Length    |SubType|D|Flag |   Protocol    |
  +---------------+---------------+-------+-------+---------------+
  |          Address (IPv4 - 4 octets / IPv6 - 16 octets)         |
  +-------------------------------+-------------------------------+
  |   Port (2 octets, optional)   |
  +-------------------------------+

]]></artwork></figure>

<t>The description of the fields is as follows:</t>

<t>o  Kind and Length: are the same as specified in <xref target="RFC6824"/>.</t>

<t>o  Subtype: to be defined by IANA (<xref target="sec-iana"/>).</t>

<t>o  D-bit (direction bit): This flag indicates whether the enclosed IP
   address (and optionally port number) indicates the original
   source or destination IP address (and port).  When the D-bit is set, 
   the enclosed IP
   address must be interpreted as the source IP address. When the
   D-bit is unset, the enclosed IP address must be interpreted as the
   destination IP address.</t>

<t>o  Protocol: This field indicates the Transport layer protocol that is carried
   in the MPTCP connection. Value 6 corresponds to TCP, value 17 for UDP. The
   support for other protocols is outside the scope of this version of this
   document.</t>

<t>o  The “Flag” bits are reserved bits for future assignment as
   additional flag bits. These additional flag bits MUST each be set
   to zero and MUST be ignored upon receipt.</t>

<t>o  Address: Includes a source or destination IP address. The address
   family is determined by the “Length” field.</t>

<t>o  Port: May be used to carry a port number (a source port if
   the D-bit is set and a destination port otherwise).</t>

</section>
<section anchor="sec:plain-mode-theory" title="Theory of Operation">

<t>Plain mode operation is as follows:</t>

<t>(1)  The CPE is provisioned with the reachability information of one
     or several Concentrators (e.g., <xref target="I-D.boucadair-mptcp-dhc"/>).</t>

<t>(2)  Outgoing TCP packets that can be forwarded by a CPE along MPTCP
     subflows are transformed into TCP packets carried over a MPTCP
     connection.  The decision-making process to decide whether a
     flow should be MPTCP-tagged or not is local to the Concentrator
     and the CPE.  It depends on the policies provisioned by the
     network provider.  As such, the decision-making process is
     policy-driven, implementation- and deployment-specific.</t>

<t>(3)  MPTCP packets are sent using a plain transport mode (i.e.,
     without any encapsulation header).</t>

<figure><artwork><![CDATA[
 The source IP address and source port number are those assigned
 locally by the CPE.  Because multiple IP addresses may be
 available to the CPE, the address used to rewrite the source IP
 address for an outgoing packet forwarded through a given network
 attachment (typically, a WAN interface) MUST be associated with
 that network attachment.  It is assumed that ingress filtering
 ({{RFC2827}}) is implemented at the boundaries of the networks to
 prevent any spoofing attack.

 The destination IP address is replaced by the CPE with one of
 the IP addresses of the Concentrator.

 The destination port number may be maintained as initially set
 by the host or altered by the CPE.

 The original destination IP address is copied into a dedicated
 MPTCP option called Plain Mode MPTCP option (see {{sec:plain-mode-option}}).
 Because of the limited TCP option space, it is RECOMMENDED to
 implement the solution specified in {{I-D.ietf-tcpm-tcp-edo}}.  As
 a reminder, {{I-D.touch-tcpm-tcp-syn-ext-opt}} specifies a
 proposal for TCP SYN extended option space.

 A binding entry must be maintained by the CPE for that outgoing
 packet.  This binding entry is instantiated by the NAT and/or
 the firewall functions embedded in the CPE.
]]></artwork></figure>

<t>(4)  Upon receipt of the packet on the MPTCP leg, the Concentrator
     extracts the IP address included in the Plain Mode MPTCP Option
     that it uses as the destination IP address of the packet
     generated in the TCP leg towards its ultimate destination.</t>

<figure><artwork><![CDATA[
 The source IP address and port are those of the Concentrators.
 A binding entry is instantiated by the Concentrator to record
 the state.

 The concentrator may be configured to behave as either a 1:1
 address translator or a N:1 translator where the same address is
 shared among multiple CPEs.  Network Providers should be aware
 of the complications that may arise if a given IP address/prefix
 is shared among multiple hosts (see {{RFC6967}}).  Whether these
 complications apply or not is deployment-specific.

 The Concentrator should preserve the same IP address that was
 assigned to a given CPE for all its outgoing connections when
 transforming an MPTCP connection into a TCP connection.
]]></artwork></figure>

<t>(5)  For incoming TCP packets that need to be forwarded to a CPE, the
     Concentrator records the source IP address in a Plain Mode MPTCP
     Option.</t>

<figure><artwork><![CDATA[
 The source IP address is replaced with one of the IP addresses
 listed in the aforementioned binding information base maintained
 by the Concentrator (if such a state entry exists) or with one
 of the Concentrator's IP addresses.

 The destination IP address is replaced with the CPE's IP address
 (if the corresponding state entry is found in the Concentrator's
 binding table) or with one of the CPE's IP addresses (that are
 known by the concentrator using some means that are out of the
 scope of the document).
]]></artwork></figure>

</section>
<section anchor="sec-flow-example" title="Flow Example">

<t>A typical flow exchange is shown in <xref target="fig-flow-example"/>.</t>

<t>This example assumes no NAT is located between the CPE and the
concentrator.</t>

<t>Because the remote server is not MPTCP-aware, the Concentrator is
responsible for preserving the same IP address (conc_@, in the
example) for the same CPE even if distinct IP addresses (cpe_@1 and
cpe_@2, in the example) are used by the CPE to establish subflows
with the Concentrator.</t>

<figure title="Flow Example (No NAT between the CPE and the Concentrator)" anchor="fig-flow-example"><artwork><![CDATA[
                                +-------+
                                |DNS    |
    +--------+                  |System |         +------------+
    |  CPE   |                  +-------+         |Concentrator|
    +--------+                      |             +------------+
         |                          |                   |
  DNS    |                          |                   |
-------->|           DNS Query      |                   |
 Query   |------------------------->|                   |
         |   DNS Reply              |                   |
         |<-------------------------|                   |
         |                                              |
         |                                              |
  src=s_@|src=cpe_@1                         dst=conc_@1|src=conc_@
-------->|--------Plain Mode MPTCP Option(d_@)--------->|-------->
  dst=d_@|                                              |dst=d_@
                                  ....

         |                                              |
  src=d_@|dst=cpe_@1                         src=conc_@1|src=d_@
<--------|<-------Plain Mode MPTCP Option(d_@)----------|<-------
  dst=s_@|                                              |dst=conc_@
                                  ....

  src=s_@|src=cpe_@2                         dst=conc_@1|src=conc_@
-------->|--------Plain Mode MPTCP Option(d_@)--------->|-------->
  dst=d_@|                                              |dst=d_@
                                  ....

Legend:
  * "--Plain Mode MPTCP Option()->" indicates the packet is sent
    in a plain mode, i.e., without any encapsulation hander,
    and that "Plain Mode MPTCP Option" is carried in the packet.
]]></artwork></figure>

</section>
</section>
<section anchor="sec-non-tcp" title="Non-TCP Traffic">

<t>From an application standpoint, there may be a value to distribute
UDP datagrams among available network attachments for the sake of
network resource optimisation, for example.</t>

<t>Unlike existing proposals that rely upon encapsulation schemes such
as IP-in-IP or GRE, this document suggests the use of MPTCP features
to control how UDP datagrams are distributed among existing network
attachments.  UDP datagrams are therefore transformed into TCP-
formatted packets.</t>

<t>The CPE and the Concentrator establish a set of MPTCP subflows.
These subflows are used to transport UDP datagrams that are
distributed among existent subflows.  TCP session tracking may not be
enabled for the set of subflows that are dedicated to transport UDP
traffic.  The establishment of these subflows is not conditioned by
the receipt of UDP packets; instead, these subflows are initiated
upon CPE reboot or when network conditions change (e.g., whenever a
new Concentrator is discovered or a new IP address is assigned to the
Concentrator).  Additional MPTCP connections may be established to
anticipate UDP traffic to be distributed among several paths.  The
maximum number of MPTCP connections that can be dedicated to UDP
traffic may be configured locally to the CPE and the Concentrator.
How this parameter is configured is implementation and deployment-
specific.</t>

<t>When the CPE (or the Concentrator) transforms a UDP packet into a TCP
one, it must insert the Plain Mode MPTCP Option with the U-bit set.
When setting the source IP address, the destination IP address, and
the IP address enclosed in the Plain Mode MPTCP Option, the same
considerations specified in Section 4.3 must be followed.</t>

<t>In addition, the CPE (or the Concentrator) must replace the UDP
header with a TCP header.  Upon receipt of the packet with the U-bit
set, the Concentrator (or the CPE) transforms the packet into a UDP
packet and follows the same considerations specified in Section 4.3.
Both the CPE and the Concentrator may be configured to disable some
features (e.g., reordering).  Enabling these features is deployment
and implementation-specific.</t>

<t>Relaying UDP packets is not conditioned by TCP session establishment
because the required subflows that are dedicated to transport UDP
traffic are already in place (either at the CPE or the Concentrator).</t>

<t>A flow example is shown in <xref target="fig-udp-mpaths"/>.</t>

<figure title="Distributing UDP packets over multiple paths" anchor="fig-udp-mpaths"><artwork><![CDATA[
    +--------+                                    +------------+
    |  CPE   |                                    |Concentrator|
    +--------+                                    +------------+
         | /------------------------------------------\ |
         ||    Dedicated MPTCP SubFlows for UDP        ||
         | \------------------------------------------/ |
         |                                              |
  src=s_@|src=cpe_@1                         dst=conc_@1|src=conc_@
---UDP-->|---------------------TCP--------------------->|---UDP-->
  dst=d_@|        Plain Mode MPTCP Option(U,d_@)        |dst=d_@
                                  ....
  src=s_@|src=cpe_@2                         dst=conc_@2|src=conc_@
---UDP-->|---------------------TCP--------------------->|---UDP-->
  dst=d_@|        Plain Mode MPTCP Option(U,d_@)        |dst=d_@
         |                                              |
                                  ....
  src=s_@|src=cpe_@1                         dst=conc_@1|src=conc_@
---UDP-->|---------------------TCP--------------------->|---UDP-->
 dst=d1_@|        Plain Mode MPTCP Option(U,d_@)        |dst=d1_@
         |                                              |
  src=s_@|src=cpe_@1                         dst=conc_@2|src=conc_@
---UDP-->|---------------------TCP--------------------->|---UDP-->
 dst=d1_@|        Plain Mode MPTCP Option(U,d_@)        |dst=d1_@
         |                                              |
]]></artwork></figure>

</section>
<section anchor="sec-iana" title="IANA Considerations">

<t>This document requests an MPTCP subtype code for this option:</t>

<t>o  Plain Mode MPTCP Option</t>

</section>
<section anchor="sec-security" title="Security Considerations">

<t>The concentrator may have access to privacy-related information
(e.g., IMSI, link identifier, subscriber credentials, etc.).  The
concentrator must not leak such sensitive information outside a local
domain.</t>

<t>Means to protect the MPTCP concentrator against Denial-of-Service
(DoS) attacks must be enabled.  Such means include the enforcement of
ingress filtering policies at the boundaries of the network.  In
order to prevent exhausting the resources of the concentrator by
creating an aggressive number of simultaneous subflows for each MPTCP
connection, the administrator should limit the number of allowed
subflows per host for a given connection.</t>

<t>Attacks outside the domain can be prevented if ingress filtering is
enforced.  Nevertheless, attacks from within the network between a
host and a concentrator instance are yet another actual threat.
Means to ensure that illegitimate nodes cannot connect to a network
should be implemented.</t>

<t>Traffic theft is also a risk if an illegitimate concentrator is
inserted in the path.  Indeed, inserting an illegitimate concentrator
in the forwarding path allows to intercept traffic and can therefore
provide access to sensitive data issued by or destined to a host.  To
mitigate this threat, secure means to discover a concentrator (for
non-transparent modes) should be enabled.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Many thanks to Chi Dung Phung, Mingui Zhang, and Christoph Paasch for
their comments.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor='RFC2119' target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor='RFC6824' target='http://www.rfc-editor.org/info/rfc6824'>
<front>
<title>TCP Extensions for Multipath Operation with Multiple Addresses</title>
<author initials='A.' surname='Ford' fullname='A. Ford'><organization /></author>
<author initials='C.' surname='Raiciu' fullname='C. Raiciu'><organization /></author>
<author initials='M.' surname='Handley' fullname='M. Handley'><organization /></author>
<author initials='O.' surname='Bonaventure' fullname='O. Bonaventure'><organization /></author>
<date year='2013' month='January' />
<abstract><t>TCP/IP communication is currently restricted to a single path per connection, yet multiple paths often exist between peers.  The simultaneous use of these multiple paths for a TCP/IP session would improve resource usage within the network and, thus, improve user experience through higher throughput and improved resilience to network failure.</t><t>Multipath TCP provides the ability to simultaneously use multiple paths between peers.  This document presents a set of extensions to traditional TCP to support multipath operation.  The protocol offers the same type of service to applications as TCP (i.e., reliable bytestream), and it provides the components necessary to establish and use multiple TCP flows across potentially disjoint paths.  This  document defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='6824'/>
<seriesInfo name='DOI' value='10.17487/RFC6824'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='I-D.boucadair-mptcp-dhc'>
<front>
<title>DHCP Options for Network-Assisted Multipath TCP (MPTCP)</title>

<author initials='M' surname='Boucadair' fullname='Mohamed Boucadair'>
    <organization />
</author>

<author initials='C' surname='Jacquenet' fullname='Christian Jacquenet'>
    <organization />
</author>

<author initials='T' surname='Reddy' fullname='Tirumaleswar Reddy'>
    <organization />
</author>

<date month='November' day='17' year='2015' />

<abstract><t>One of the promising deployment scenarios for Multipath TCP (MPTCP) is to enable a Customer Premises Equipment (CPE) that is connected to multiple networks (e.g., DSL, LTE, WLAN) to optimize the usage of its network attachments.  Because of the lack of MPTCP support at the server side, some service providers consider a network-assisted model that relies upon the activation of a dedicated function called: MPTCP Concentrator.  This document focuses on the explicit deployment scheme where the identity of the MPTCP Concentrator(s) is explicitly configured on connected hosts.  This document specifies DHCP (IPv4 and IPv6) options to configure hosts with Multipath TCP (MPTCP) parameters.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-boucadair-mptcp-dhc-04' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-boucadair-mptcp-dhc-04.txt' />
</reference>



<reference anchor='I-D.deng-mptcp-proxy'>
<front>
<title>Use-cases and Requirements for MPTCP Proxy in ISP Networks</title>

<author initials='D' surname='Lingli' fullname='Deng Lingli'>
    <organization />
</author>

<author initials='D' surname='Liu' fullname='Dapeng Liu'>
    <organization />
</author>

<author initials='T' surname='Sun' fullname='Tao Sun'>
    <organization />
</author>

<author initials='M' surname='Boucadair' fullname='Mohamed Boucadair'>
    <organization />
</author>

<author initials='G' surname='Cauchie' fullname='Gregory Cauchie'>
    <organization />
</author>

<date month='October' day='26' year='2014' />

<abstract><t>This document presents the use-cases and identifies requirements for ISP deployed MPTCP proxies for both Fixed and Mobile networks.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-deng-mptcp-proxy-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-deng-mptcp-proxy-01.txt' />
</reference>



<reference anchor='I-D.ietf-tcpm-tcp-edo'>
<front>
<title>TCP Extended Data Offset Option</title>

<author initials='J' surname='Touch' fullname='Joseph Touch'>
    <organization />
</author>

<author initials='W' surname='Eddy' fullname='Wesley Eddy'>
    <organization />
</author>

<date month='November' day='2' year='2015' />

<abstract><t>TCP segments include a Data Offset field to indicate space for TCP options but the size of the field can limit the space available for complex options such as SACK and Multipath TCP and can limit the combination of such options supported in a single connection. This document updates RFC 793 with an optional TCP extension to that space to support the use of multiple large options. It also explains why the initial SYN of a connection cannot be extending a single segment.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-tcpm-tcp-edo-04' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-tcpm-tcp-edo-04.txt' />
</reference>



<reference anchor='I-D.touch-tcpm-tcp-syn-ext-opt'>
<front>
<title>TCP SYN Extended Option Space Using an Out-of-Band Segment</title>

<author initials='J' surname='Touch' fullname='Joseph Touch'>
    <organization />
</author>

<author initials='T' surname='Faber' fullname='Ted Faber'>
    <organization />
</author>

<date month='October' day='15' year='2015' />

<abstract><t>This document describes an experimental method to extend the option space for connection parameters within the initial TCP SYN segment, at the start of a TCP connection. This method effectively extends the option space of an initial SYN by using an additional coupled segment that is sent 'out-of-band'. It complements the proposed Extended Data Offset (EDO) option that is applicable only after the initial segment.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-touch-tcpm-tcp-syn-ext-opt-03' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-touch-tcpm-tcp-syn-ext-opt-03.txt' />
</reference>



<reference  anchor='RFC1701' target='http://www.rfc-editor.org/info/rfc1701'>
<front>
<title>Generic Routing Encapsulation (GRE)</title>
<author initials='S.' surname='Hanks' fullname='S. Hanks'><organization /></author>
<author initials='T.' surname='Li' fullname='T. Li'><organization /></author>
<author initials='D.' surname='Farinacci' fullname='D. Farinacci'><organization /></author>
<author initials='P.' surname='Traina' fullname='P. Traina'><organization /></author>
<date year='1994' month='October' />
<abstract><t>This document specifies a protocol for performing encapsulation of an arbitrary network layer protocol over another arbitrary network layer protocol. This memo provides information for the Internet community. This memo does not specify an Internet standard of any kind.</t></abstract>
</front>
<seriesInfo name='RFC' value='1701'/>
<seriesInfo name='DOI' value='10.17487/RFC1701'/>
</reference>



<reference  anchor='RFC1928' target='http://www.rfc-editor.org/info/rfc1928'>
<front>
<title>SOCKS Protocol Version 5</title>
<author initials='M.' surname='Leech' fullname='M. Leech'><organization /></author>
<author initials='M.' surname='Ganis' fullname='M. Ganis'><organization /></author>
<author initials='Y.' surname='Lee' fullname='Y. Lee'><organization /></author>
<author initials='R.' surname='Kuris' fullname='R. Kuris'><organization /></author>
<author initials='D.' surname='Koblas' fullname='D. Koblas'><organization /></author>
<author initials='L.' surname='Jones' fullname='L. Jones'><organization /></author>
<date year='1996' month='March' />
<abstract><t>This memo describes a protocol that is an evolution of the previous version of the protocol, version 4 [1]. This new protocol stems from active discussions and prototype implementations.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='1928'/>
<seriesInfo name='DOI' value='10.17487/RFC1928'/>
</reference>



<reference  anchor='RFC2473' target='http://www.rfc-editor.org/info/rfc2473'>
<front>
<title>Generic Packet Tunneling in IPv6 Specification</title>
<author initials='A.' surname='Conta' fullname='A. Conta'><organization /></author>
<author initials='S.' surname='Deering' fullname='S. Deering'><organization /></author>
<date year='1998' month='December' />
<abstract><t>This document defines the model and generic mechanisms for IPv6 encapsulation of Internet packets, such as IPv6 and IPv4.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2473'/>
<seriesInfo name='DOI' value='10.17487/RFC2473'/>
</reference>



<reference  anchor='RFC2827' target='http://www.rfc-editor.org/info/rfc2827'>
<front>
<title>Network Ingress Filtering: Defeating Denial of Service Attacks which employ IP Source Address Spoofing</title>
<author initials='P.' surname='Ferguson' fullname='P. Ferguson'><organization /></author>
<author initials='D.' surname='Senie' fullname='D. Senie'><organization /></author>
<date year='2000' month='May' />
<abstract><t>This paper discusses a simple, effective, and straightforward method for using ingress traffic filtering to prohibit DoS (Denial of Service) attacks which use forged IP addresses to be propagated from 'behind' an Internet Service Provider's (ISP) aggregation point.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='38'/>
<seriesInfo name='RFC' value='2827'/>
<seriesInfo name='DOI' value='10.17487/RFC2827'/>
</reference>



<reference  anchor='RFC4908' target='http://www.rfc-editor.org/info/rfc4908'>
<front>
<title>Multi-homing for small scale fixed network Using Mobile IP and NEMO</title>
<author initials='K.' surname='Nagami' fullname='K. Nagami'><organization /></author>
<author initials='S.' surname='Uda' fullname='S. Uda'><organization /></author>
<author initials='N.' surname='Ogashiwa' fullname='N. Ogashiwa'><organization /></author>
<author initials='H.' surname='Esaki' fullname='H. Esaki'><organization /></author>
<author initials='R.' surname='Wakikawa' fullname='R. Wakikawa'><organization /></author>
<author initials='H.' surname='Ohnishi' fullname='H. Ohnishi'><organization /></author>
<date year='2007' month='June' />
<abstract><t>Multihoming technology improves the availability of host and network connectivity.  Since the behaviors of fixed and mobile networks differ, distinct architectures for each have been discussed and proposed.  This document proposes a common architecture for both mobile and fixed networking environments, using mobile IP (RFC 3775) and Network Mobility (NEMO; RFC 3963).  The proposed architecture requires a modification of mobile IP and NEMO so that multiple Care-of Addresses (CoAs) can be used.  In addition, multiple Home Agents (HAs) that are located in different places are required for redundancy.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4908'/>
<seriesInfo name='DOI' value='10.17487/RFC4908'/>
</reference>



<reference  anchor='RFC6967' target='http://www.rfc-editor.org/info/rfc6967'>
<front>
<title>Analysis of Potential Solutions for Revealing a Host Identifier (HOST_ID) in Shared Address Deployments</title>
<author initials='M.' surname='Boucadair' fullname='M. Boucadair'><organization /></author>
<author initials='J.' surname='Touch' fullname='J. Touch'><organization /></author>
<author initials='P.' surname='Levis' fullname='P. Levis'><organization /></author>
<author initials='R.' surname='Penno' fullname='R. Penno'><organization /></author>
<date year='2013' month='June' />
<abstract><t>This document is a collection of potential solutions for revealing a host identifier (denoted as HOST_ID) when a Carrier Grade NAT (CGN) or application proxies are involved in the path.  This host identifier could be used by a remote server to sort packets according to the sending host.  The host identifier must be unique to each host under the same shared IP address.</t><t>This document analyzes a set of potential solutions for revealing a host identifier and does not recommend a particular solution, although it does highlight the hazards of some approaches.</t></abstract>
</front>
<seriesInfo name='RFC' value='6967'/>
<seriesInfo name='DOI' value='10.17487/RFC6967'/>
</reference>




    </references>



  </back>
</rfc>

